import { j as e, a as n, r as i, C as D, b as P, S as M, c as O, L as T, d as I, T as w, F as A, R as k, e as E } from "./vendor.85d61bf6.js"; const _ = function () { const s = document.createElement("link").relList; if (s && s.supports && s.supports("modulepreload")) return; for (const o of document.querySelectorAll('link[rel="modulepreload"]')) l(o); new MutationObserver(o => { for (const a of o) if (a.type === "childList") for (const d of a.addedNodes) d.tagName === "LINK" && d.rel === "modulepreload" && l(d) }).observe(document, { childList: !0, subtree: !0 }); function r(o) { const a = {}; return o.integrity && (a.integrity = o.integrity), o.referrerpolicy && (a.referrerPolicy = o.referrerpolicy), o.crossorigin === "use-credentials" ? a.credentials = "include" : o.crossorigin === "anonymous" ? a.credentials = "omit" : a.credentials = "same-origin", a } function l(o) { if (o.ep) return; o.ep = !0; const a = r(o); fetch(o.href, a) } }; _(); const $ = ({ filtro: t, setFiltro: s }) => e("div", { className: "filtros sombra contenedor", children: e("form", { children: n("div", { className: "campo", children: [e("label", { htmlFor: "filtro", children: "Filtrar campos" }), n("select", { id: "filtro", value: t, onChange: r => s(r.target.value), children: [e("option", { value: "", children: "-- Todas las Categorias --" }), e("option", { value: "ahorro", children: "Ahorro" }), e("option", { value: "comida", children: "Comida" }), e("option", { value: "casa", children: "Casa" }), e("option", { value: "gastos", children: "Gastos Varios" }), e("option", { value: "ocio", children: "Ocio" }), e("option", { value: "salud", children: "Salud" }), e("option", { value: "suscripciones", children: "Suscripciones" })] })] }) }) }); const B = ({ gastos: t, setGastos: s, presupuesto: r, setPresupuesto: l, setIsValidPresupuesto: o }) => { const [a, d] = i.exports.useState(0), [u, f] = i.exports.useState(0), [p, v] = i.exports.useState(0); i.exports.useEffect(() => { const h = t.reduce((x, y) => y.cantidad + x, 0), b = r - h, S = ((r - b) / r * 100).toFixed(2); setTimeout(() => { d(S) }, 1500), f(b), v(h) }, [t]); const m = h => h.toLocaleString("en-US", { style: "currency", currency: "USD" }), g = () => { confirm("Deseas reiniciar presupuesto y gastos?") && (s([]), l(0), o(!1)) }; return n("div", { className: "contenedor-presupuesto contenedor sombra dos-columnas", children: [e("div", { children: e(D, { styles: P({ pathColor: a > 100 ? "#dc3545" : "#3B82F6", textColor: a > 100 ? "#dc3545" : "#3B82F6" }), value: a, text: `${a}% Gastado` }) }), n("div", { className: "contenido-presupuesto", children: [e("button", { className: "reset-app", type: "button", onClick: g, children: "Resetear App" }), n("p", { children: [e("span", { children: "Presupuesto: " }), m(r)] }), n("p", { className: `${u < 0 ? "negativo" : ""}`, children: [e("span", { children: "Disponible: " }), m(u)] }), n("p", { children: [e("span", { children: "Gastado: " }), m(p)] })] })] }) }, L = ({ children: t, tipo: s }) => e("div", { className: `alerta ${s}`, children: t }), R = ({ presupuesto: t, setPresupuesto: s, setIsValidPresupuesto: r }) => { const [l, o] = i.exports.useState(""); return e("div", { className: "contenedor-presupuesto contenedor sombra", children: n("form", { className: "formulario", onSubmit: d => { if (d.preventDefault(), !t || t < 0) { o("Presupuesto no valido"); return } o(""), r(!0) }, children: [n("div", { className: "campo", children: [e("label", { children: "Definir Presupuesto" }), e("input", { className: "nuevo-presupuesto", type: "number", placeholder: "A\xF1ade tu presupuesto", value: t, onChange: d => s(Number(d.target.value)) })] }), e("input", { type: "submit", value: "A\xF1adir" }), l && e(L, { tipo: "error", children: l })] }) }) }, V = ({ presupuesto: t, setPresupuesto: s, isValidPresupuesto: r, setIsValidPresupuesto: l, gastos: o, setGastos: a }) => n("header", { children: [e("h1", { children: "Planificador de Gastos" }), r ? e(B, { gastos: o, setGastos: a, presupuesto: t, setPresupuesto: s, setIsValidPresupuesto: l }) : e(R, { presupuesto: t, setPresupuesto: s, setIsValidPresupuesto: l })] }); const z = () => { const t = Math.random().toString(36).substr(2), s = Date.now().toString(36); return t + s }, J = t => { const s = new Date(t), r = { year: "numeric", month: "long", day: "2-digit" }; return s.toLocaleDateString("es-ES", r) }; var U = "https://yoimeldev.github.io/Control-presupuesto/assets/icono_ahorro.ff2959d3.svg", q = "https://yoimeldev.github.io/Control-presupuesto/assets/icono_casa.1170ce11.svg", H = "https://yoimeldev.github.io/Control-presupuesto/assets/icono_comida.db0a9016.svg", K = "https://yoimeldev.github.io/Control-presupuesto/assets/icono_gastos.e6dea3b0.svg", Q = "https://yoimeldev.github.io/Control-presupuesto/assets/icono_ocio.ad5d0e9e.svg", W = "https://yoimeldev.github.io/Control-presupuesto/assets/icono_suscripciones.97f04dc8.svg", X = "https://yoimeldev.github.io/Control-presupuesto/assets/icono_salud.41ba3136.svg"; const Y = { ahorro: U, comida: H, casa: q, gastos: K, ocio: Q, salud: X, suscripciones: W }, j = ({ gasto: t, setGastoEditar: s, eliminarGasto: r }) => { const { categoria: l, nombre: o, cantidad: a, id: d, fecha: u } = t, f = () => e(T, { children: e(I, { onClick: () => s(t), children: "Editar" }) }), p = () => e(w, { children: e(I, { onClick: () => r(d), destructive: !0, children: "Eliminar" }) }); return e(M, { children: e(O, { leadingActions: f(), trailingActions: p(), children: n("div", { className: "gasto sombra", children: [n("div", { className: "contenido-gasto", children: [e("img", { src: Y[l], alt: l }), n("div", { className: "descripcion-gasto", children: [e("p", { className: "categoria", children: l }), e("p", { className: "nombre-gasto", children: o }), n("p", { className: "fecha-gasto", children: ["Agregado el: ", "", e("span", { children: J(u) })] })] })] }), n("p", { className: "cantidad-gasto", children: ["$", a] })] }) }) }) }, Z = ({ gastos: t, setGastoEditar: s, eliminarGasto: r, filtro: l, gastosFiltrados: o }) => e("div", { className: "listado-gastos contenedor", children: l ? n(A, { children: [e("h2", { children: o ? "Gastos" : "No hay gastos aun" }), o.map(a => e(j, { gasto: a, setGastoEditar: s, eliminarGasto: r }, a.id))] }) : n(A, { children: [e("h2", { children: t.length ? "Gastos" : "No hay gastos aun" }), t.map(a => e(j, { gasto: a, setGastoEditar: s, eliminarGasto: r }, a.id))] }) }); var ee = "https://yoimeldev.github.io/Control-presupuesto/assets/cerrar.ab3aac92.svg"; const oe = ({ setModal: t, animarModal: s, setAnimarModal: r, guardarGasto: l, gastoEditar: o, setGastoEditar: a }) => { const d = () => { r(!1), a({}), setTimeout(() => { t(!1) }, 500) }, [u, f] = i.exports.useState(""), [p, v] = i.exports.useState(""), [m, g] = i.exports.useState(""), [h, b] = i.exports.useState(""), [S, x] = i.exports.useState(""), [y, F] = i.exports.useState(""); return i.exports.useEffect(() => { Object.keys(o).length > 0 && (v(o.nombre), g(o.cantidad), b(o.categoria), F(o.id), x(o.fecha)) }, []), n("div", { className: "modal", children: [e("div", { className: "cerrar-modal", children: e("img", { src: ee, alt: "Cerrar button", onClick: d }) }), n("form", { onSubmit: c => { if (c.preventDefault(), [p, m, h].includes("")) { f("Todos los campos son obligatorios"), setTimeout(() => { f("") }, 3e3); return } l({ nombre: p, cantidad: m, categoria: h, id: y, fecha: S }) }, className: `formulario ${s ? "animar" : "cerrar"}`, children: [e("legend", { children: o.nombre ? "Editar Gasto" : "Nuevo Gasto" }), u && e(L, { tipo: "error", children: u }), n("div", { className: "campo", children: [e("label", { htmlFor: "nombre", children: "Nombre Gasto" }), e("input", { id: "nombre", type: "text", placeholder: "A\xF1ade el nombre del gasto", value: p, onChange: c => v(c.target.value) })] }), n("div", { className: "campo", children: [e("label", { htmlFor: "cantidad", children: "Cantidad" }), e("input", { id: "cantidad", type: "number", placeholder: "A\xF1ade la cantidad del gasto: ej. 300", value: m, onChange: c => g(Number(c.target.value)) })] }), n("div", { className: "campo", children: [e("label", { htmlFor: "categoria", children: "Categoria" }), n("select", { id: "categoria", value: h, onChange: c => b(c.target.value), children: [e("option", { value: "", children: "-- Seleccione --" }), e("option", { value: "ahorro", children: "Ahorro" }), e("option", { value: "comida", children: "Comida" }), e("option", { value: "casa", children: "Casa" }), e("option", { value: "gastos", children: "Gastos Varios" }), e("option", { value: "ocio", children: "Ocio" }), e("option", { value: "salud", children: "Salud" }), e("option", { value: "suscripciones", children: "Suscripciones" })] })] }), e("input", { type: "submit", value: o.nombre ? "Guardar Gasto" : "A\xF1adir Gasto" })] })] }) }; var te = "https://yoimeldev.github.io/Control-presupuesto/assets/nuevo-gasto.3ab385ce.svg"; function ae() { var G; const [t, s] = i.exports.useState(localStorage.getItem("gastos") ? JSON.parse(localStorage.getItem("gastos")) : []), [r, l] = i.exports.useState(Number((G = localStorage.getItem("presupuesto")) != null ? G : 0)), [o, a] = i.exports.useState(!1), [d, u] = i.exports.useState(!1), [f, p] = i.exports.useState(!1), [v, m] = i.exports.useState({}), [g, h] = i.exports.useState(""), [b, S] = i.exports.useState([]); return i.exports.useEffect(() => { Object.keys(v).length > 0 && (u(!0), setTimeout(() => { p(!0) }, 500)) }, [v]), i.exports.useEffect(() => { localStorage.setItem("presupuesto", r != null ? r : 0) }, [r]), i.exports.useEffect(() => { Number(localStorage.getItem("presupuesto")) > 0 && a(!0) }, []), i.exports.useEffect(() => { var c; localStorage.setItem("gastos", (c = JSON.stringify(t)) != null ? c : []) }, [t]), i.exports.useEffect(() => { if (g) { const c = t.filter(N => N.categoria === g); S(c) } }, [g]), n("div", { className: d ? "fijar" : "", children: [e(V, { gastos: t, setGastos: s, presupuesto: r, setPresupuesto: l, isValidPresupuesto: o, setIsValidPresupuesto: a }), o && n(A, { children: [n("main", { children: [e($, { filtro: g, setFiltro: h }), e(Z, { gastos: t, setGastoEditar: m, eliminarGasto: c => { const N = t.filter(C => C.id !== c); s(N) }, filtro: g, gastosFiltrados: b })] }), e("div", { className: "nuevo-gasto", children: e("img", { src: te, alt: "Icono nuevo gasto", onClick: () => { u(!0), m({}), setTimeout(() => { p(!0) }, 500) } }) })] }), d && e(oe, { setModal: u, animarModal: f, setAnimarModal: p, guardarGasto: c => { if (c.id) { const N = t.map(C => C.id === c.id ? c : C); s(N), m({}) } else c.id = z(), c.fecha = Date.now(), s([...t, c]); p(!1), setTimeout(() => { u(!1) }, 500) }, gastoEditar: v, setGastoEditar: m })] }) } k.render(e(E.StrictMode, { children: e(ae, {}) }), document.getElementById("root"));
